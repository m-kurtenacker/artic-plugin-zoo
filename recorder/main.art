#[import(cc = "plugin", name = "wrap_token")] fn @wrap_token(token: fn() -> i32, expr: fn (i32) -> i32) -> ();
#[import(cc = "plugin", name = "generate_token", depends = wrap_token)] fn @generate_token(expr: fn () -> i32) -> fn () -> i32;

#[export]
fn main (_argc : i32, _argv : &[&[u8]]) -> i32 {
    let token = generate_token(|| { 0 });

    for i in unroll(0, 4) {
        wrap_token(token, @|x| { x + i });
    }

    let a = token();
    a
}
